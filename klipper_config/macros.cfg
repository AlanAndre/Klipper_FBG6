[gcode_macro SHUTDOWN_MACHINE]
gcode:
    {action_call_remote_method("shutdown_machine")}

[gcode_macro CLEAN_NOZZLE]
gcode:
   G1 X1 Y20 F10000
   G1 X1 Y130 F10000
   G1 X1 Y70 F10000
   G1 X1 Y130 F10000
   G1 X1 Y70 F10000
   G1 X1 Y130 F10000
   G1 X1 Y20 F10000

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(10) %}       #edit to your park position
    {% set y = params.Y|default(200) %}      #edit to your park position
    {% set z = params.Z|default(20)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate safe lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{e} F300
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    G91
    G1 E{e} F300
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME  

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    M106 S0
    G91
    G1 Z5 
    G90
    G1 X5 Y205
    M84

[gcode_macro PID_E]
gcode:
  {% set T = params.T|default(230) %}
  PID_CALIBRATE HEATER=extruder TARGET={T}

[gcode_macro PID_B]
gcode:
  {% set T = params.T|default(80) %}
  PID_CALIBRATE HEATER=heater_bed TARGET={T}

[gcode_macro END_PRINT]
gcode:
    M140 S0
    M104 S0
    G91
    G1 Z10 F3000
    G90
    G1  E-3 F300
    G1 X10 Y200 F3000
    M84
    M106 S200
    SET_FAN_SPEED FAN=Camera_Fan SPEED=1
    G4 P300000
    M106 S0
    SET_FAN_SPEED FAN=Camera_Fan SPEED=0
    BEEP

# LOW_TEMP_CHECK checks if there is a setpoint for the  extruder. Untested! 
# - If this setpoint is reached, continue. 
# - If not, heat to setpoint.
# - If no setpoint, heat to parameter T (default@200)
[gcode_macro LOW_TEMP_CHECK]
# default_parameter_T: 230
gcode: 
  {% set T = params.T|default(230) %}
    {% if printer.extruder.target != 0 %} # if there is a setpoint for extruder
        {% if printer.extruder.temperature < printer.extruder.target %} # if not reached, heat
            M118 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
            M109 S{printer.extruder.target|float} 
        {% endif %}
    {% else %} # if no setpoint for extruder
        {% if printer.extruder.target < T %}  # heat to T.
            M118 No setpoint, heating to {T}.
            M109 S{T}
        {% endif %}
    {% endif %}

# filament change 
[gcode_macro M600]
gcode:
    # M117 Filament Change
    M118 Filament Change
    SAVE_GCODE_STATE NAME=filament_change
    PAUSE
    LOW_TEMP_CHECK
    G91 # relative
    G1 E-1 F300 # retract 1
    M125 # park
    M702 # unload

    # M117 New filament
    M118 New filament
    COUNTDOWN TIME=25 MSG="Switch"
    M701
    COUNTDOWN TIME=10 MSG="Clean"
    RESUME
    # M117 Resuming
    M118 Resuming
    RESTORE_GCODE_STATE NAME=filament_change
    # M117 Printing..
    M118 Printing..

[gcode_macro COUNTDOWN]
# default_parameter_MSG: "Time: "
# default_parameter_TIME: 10
gcode: 
  {% set MSG = 'Time: ' %}
  {% set TIME = 10 %}
  # countdown 
  {% for s in range(TIME|int, 0, -1) %}
      # dwell 1 second
      G4 P1000
      # echo
      # M117 {params.MSG} {s}s
      M118 {params.MSG} {s}s
  {% endfor %}

[gcode_macro MOTOR_OFF]
gcode:
  M18

[gcode_macro M81_Power_Off]
gcode:
  SET_PIN PIN=POWER_OFF VALUE=1

[output_pin POWER_OFF]
pin: !PE9
shutdown_value: 1

#[gcode_shell_command backup_cfg]
#command: sh /home/vitaliy/klipper_config/autocommit.sh
#timeout: 30.0
#verbose: True

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg

# load filament
[gcode_macro M701]
gcode:
    SAVE_GCODE_STATE NAME=loading_filament
    M117 Loading Filament
    M83
    G92 E0.0
    LOW_TEMP_CHECK
    G1 E20 F6000  # length of bowden tube till cold-end (~420mm) 
    G92 E0.0
    RESTORE_GCODE_STATE NAME=loading_filament

# unload filament
[gcode_macro M702]
gcode:
    SAVE_GCODE_STATE NAME=unloading_filament
    M125 # park
    # M117 Unloading Filament 
    LOW_TEMP_CHECK
    G91 # set relative
    G1 E10 F100 
    G92 E0.0
    G1 E-15 F6000 # the E is the length of the bowden tube (420mm) + 100 mm. changed to 15!
    G92 E0.0
    RESTORE_GCODE_STATE NAME=unloading_filament

[gcode_macro F_CONSUMED]
variable_filament_consumed: 0
variable_filament_lenght: 250   # length between the sensor and extruder
gcode:
  # save current filament consumption
  SET_GCODE_VARIABLE MACRO=F_CONSUMED VARIABLE=filament_consumed VALUE={printer.print_stats.filament_used}
  # start checking filament consumption
  UPDATE_DELAYED_GCODE ID=DELAY_M600 DURATION=1

[delayed_gcode DELAY_M600]
gcode:
  # use set for easier reading
  {% set consumed=printer["gcode_macro F_CONSUMED"].filament_consumed %}
  {% set length=printer["gcode_macro F_CONSUMED"].filament_lenght %}
  # check if predetermine length is reached
  {% if printer.print_stats.filament_used|float <= (consumed|float + length|float) %}
  # start looping this script every second
    UPDATE_DELAYED_GCODE ID=DELAY_M600 DURATION=1
  {% else %}
    M600
  {% endif %}
